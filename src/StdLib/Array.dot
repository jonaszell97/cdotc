
class Array<T> {
    @RawArray
    let raw: [T] { get }
    let length: Int { get }

    init (@RawArray arr: [T], len: Int) {
        raw = arr
        length = len
    }

    operator [](index: Int) {
        return raw[index]
    }

    @UnsafePtr
    operator []&(index: Int) {
        return &raw[index]
    }

    operator +(rhs: Array) {
        @RawArray
        let newArr: [T (length + rhs.length)]
        let i = 0
        for (; i < length; ++i) {
            newArr[i] = raw[i]
        }
        for (; i < length + rhs.length; ++i) {
            newArr[i] = rhs.raw[i - length]
        }

        return Array(newArr, i)
    }
}