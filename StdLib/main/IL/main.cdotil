
; Module ID: /Users/Jonas/CDot/StdLib/main/main.dot
$main.MemoryOrder = enum { i32, %NotAtomic = i32 0, %Relaxed = i32 1, %Consume = i32 2, %Acquire = i32 3, %Release = i32 4, %AcquireRelease = i32 5, %SequentiallyConsistent = i32 6 }
$"main.Atomic<i64>" = struct { %value: i64 }
$"main.<private name>.ProtocolConformance" = struct { %typeInfo: UnsafePtr<$"main.<private name>.TypeInfo">, %vtable: UnsafePtr<UnsafeRawPtr> }
$"main.<private name>.Int64" = struct { %value: i64 }
$"main.<private name>.TypeInfo" = struct { %baseClass: UnsafePtr<$"main.<private name>.TypeInfo">, %vtable: UnsafePtr<UnsafeRawPtr>, %deinit: $(UnsafeMutableRawPtr) -> void, %name: UnsafePtr<u8>, %valueWitnessTable: UnsafePtr<$"main.<private name>.ValueWitnessTable">, %conformances: UnsafePtr<$"main.<private name>.ProtocolConformance">, %size: u64, %alignment: u64, %stride: u64 }
$"main.<private name>.ExistentialContainer" = struct { %value: UnsafeMutableRawPtr, %typeInfo: UnsafePtr<$"main.<private name>.TypeInfo">, %conformance: UnsafePtr<$"main.<private name>.ProtocolConformance"> }
$"main.<private name>.Bool" = struct { %value: u1 }
$"main.<private name>.ValueWitnessTable" = struct { %copyFn: $(UnsafeMutableRawPtr, UnsafeRawPtr) -> void, %deinit: $(UnsafeMutableRawPtr) -> void }

@_CTINW4mainE11MemoryOrderE = constant struct $"main.<private name>.TypeInfo" { UnsafePtr<$"main.<private name>.TypeInfo"> null, UnsafePtr<UnsafeRawPtr> null, $(UnsafeMutableRawPtr) -> void bitcast ($(MutRef<$main.MemoryOrder>) -> void @_CNW4mainE11MemoryOrderD0Ev) to $(UnsafeMutableRawPtr) -> void, UnsafePtr<u8> "main.MemoryOrder", UnsafePtr<$"main.<private name>.ValueWitnessTable"> addr_of (@0: Ref<$"main.<private name>.ValueWitnessTable">), UnsafePtr<$"main.<private name>.ProtocolConformance"> bitcast (@1: Ref<$[6 x $"main.<private name>.ProtocolConformance"]>) to UnsafePtr<$"main.<private name>.ProtocolConformance">, struct $"main.<private name>.Int64" { i64 4 }, struct $"main.<private name>.Int64" { i64 4 }, struct $"main.<private name>.Int64" { i64 4 } }
@0 = constant struct $"main.<private name>.ValueWitnessTable" { $(UnsafeMutableRawPtr, UnsafeRawPtr) -> void bitcast ($($main.MemoryOrder) -> $main.MemoryOrder @_CNW4mainE11MemoryOrder4copyES_L0) to $(UnsafeMutableRawPtr, UnsafeRawPtr) -> void, $(UnsafeMutableRawPtr) -> void bitcast ($(MutRef<$main.MemoryOrder>) -> void @_CNW4mainE11MemoryOrderD0Ev) to $(UnsafeMutableRawPtr) -> void }
@_CTINW4mainE3AnyE = constant struct $"main.<private name>.TypeInfo" { UnsafePtr<$"main.<private name>.TypeInfo"> null, UnsafePtr<UnsafeRawPtr> null, $(UnsafeMutableRawPtr) -> void null, UnsafePtr<u8> "main.<private name>.Any", UnsafePtr<$"main.<private name>.ValueWitnessTable"> null, UnsafePtr<$"main.<private name>.ProtocolConformance"> null, struct $"main.<private name>.Int64" { i64 24 }, struct $"main.<private name>.Int64" { i64 8 }, struct $"main.<private name>.Int64" { i64 24 } }
@_CTPNW4mainE11MemoryOrderENW_0E3AnyE = constant $[0 x UnsafeRawPtr] []
@_CTINW4mainE9EquatableE = constant struct $"main.<private name>.TypeInfo" { UnsafePtr<$"main.<private name>.TypeInfo"> null, UnsafePtr<UnsafeRawPtr> null, $(UnsafeMutableRawPtr) -> void null, UnsafePtr<u8> "main.<private name>.Equatable", UnsafePtr<$"main.<private name>.ValueWitnessTable"> null, UnsafePtr<$"main.<private name>.ProtocolConformance"> null, struct $"main.<private name>.Int64" { i64 24 }, struct $"main.<private name>.Int64" { i64 8 }, struct $"main.<private name>.Int64" { i64 24 } }
@_CTPNW4mainE11MemoryOrderENW_0E9EquatableE = constant $[2 x UnsafeRawPtr] [UnsafeRawPtr bitcast ($($main.MemoryOrder, $main.MemoryOrder) -> $"main.<private name>.Bool" @"_CNW4mainE11MemoryOrderXi2==ES_S_L0L0") to UnsafeRawPtr, UnsafeRawPtr bitcast ($($main.MemoryOrder, $main.MemoryOrder) -> $"main.<private name>.Bool" @"_CNW4mainE11MemoryOrderXi2!=ES_S_L0L0") to UnsafeRawPtr]
@_CTINW4mainE16RawRepresentableE = constant struct $"main.<private name>.TypeInfo" { UnsafePtr<$"main.<private name>.TypeInfo"> null, UnsafePtr<UnsafeRawPtr> null, $(UnsafeMutableRawPtr) -> void null, UnsafePtr<u8> "main.<private name>.RawRepresentable", UnsafePtr<$"main.<private name>.ValueWitnessTable"> null, UnsafePtr<$"main.<private name>.ProtocolConformance"> null, struct $"main.<private name>.Int64" { i64 24 }, struct $"main.<private name>.Int64" { i64 8 }, struct $"main.<private name>.Int64" { i64 24 } }
@_CTPNW4mainE11MemoryOrderENW_0E16RawRepresentableE = constant $[2 x UnsafeRawPtr] [UnsafeRawPtr bitcast ($(MutRef<$main.MemoryOrder>, i32) -> void @_CNW4mainE11MemoryOrderC1EiL8rawValue) to UnsafeRawPtr, UnsafeRawPtr bitcast ($($main.MemoryOrder) -> i32 @_CNW4mainE11MemoryOrderGa8rawValueES_L0) to UnsafeRawPtr]
@_CTINW4mainE8CopyableE = constant struct $"main.<private name>.TypeInfo" { UnsafePtr<$"main.<private name>.TypeInfo"> null, UnsafePtr<UnsafeRawPtr> null, $(UnsafeMutableRawPtr) -> void null, UnsafePtr<u8> "main.<private name>.Copyable", UnsafePtr<$"main.<private name>.ValueWitnessTable"> null, UnsafePtr<$"main.<private name>.ProtocolConformance"> null, struct $"main.<private name>.Int64" { i64 24 }, struct $"main.<private name>.Int64" { i64 8 }, struct $"main.<private name>.Int64" { i64 24 } }
@_CTPNW4mainE11MemoryOrderENW_0E8CopyableE = constant $[1 x UnsafeRawPtr] [UnsafeRawPtr bitcast ($($main.MemoryOrder) -> $main.MemoryOrder @_CNW4mainE11MemoryOrder4copyES_L0) to UnsafeRawPtr]
@_CTINW4mainE18ImplicitlyCopyableE = constant struct $"main.<private name>.TypeInfo" { UnsafePtr<$"main.<private name>.TypeInfo"> null, UnsafePtr<UnsafeRawPtr> null, $(UnsafeMutableRawPtr) -> void null, UnsafePtr<u8> "main.<private name>.ImplicitlyCopyable", UnsafePtr<$"main.<private name>.ValueWitnessTable"> null, UnsafePtr<$"main.<private name>.ProtocolConformance"> null, struct $"main.<private name>.Int64" { i64 24 }, struct $"main.<private name>.Int64" { i64 8 }, struct $"main.<private name>.Int64" { i64 24 } }
@_CTPNW4mainE11MemoryOrderENW_0E18ImplicitlyCopyableE = constant $[0 x UnsafeRawPtr] []
@1 = constant $[6 x $"main.<private name>.ProtocolConformance"] [struct $"main.<private name>.ProtocolConformance" { UnsafePtr<$"main.<private name>.TypeInfo"> addr_of (@_CTINW4mainE3AnyE: Ref<$"main.<private name>.TypeInfo">), UnsafePtr<UnsafePtr<i8>> bitcast (@_CTPNW4mainE11MemoryOrderENW_0E3AnyE: Ref<$[0 x UnsafeRawPtr]>) to UnsafePtr<UnsafePtr<i8>> }, struct $"main.<private name>.ProtocolConformance" { UnsafePtr<$"main.<private name>.TypeInfo"> addr_of (@_CTINW4mainE9EquatableE: Ref<$"main.<private name>.TypeInfo">), UnsafePtr<UnsafePtr<i8>> bitcast (@_CTPNW4mainE11MemoryOrderENW_0E9EquatableE: Ref<$[2 x UnsafeRawPtr]>) to UnsafePtr<UnsafePtr<i8>> }, struct $"main.<private name>.ProtocolConformance" { UnsafePtr<$"main.<private name>.TypeInfo"> addr_of (@_CTINW4mainE16RawRepresentableE: Ref<$"main.<private name>.TypeInfo">), UnsafePtr<UnsafePtr<i8>> bitcast (@_CTPNW4mainE11MemoryOrderENW_0E16RawRepresentableE: Ref<$[2 x UnsafeRawPtr]>) to UnsafePtr<UnsafePtr<i8>> }, struct $"main.<private name>.ProtocolConformance" { UnsafePtr<$"main.<private name>.TypeInfo"> addr_of (@_CTINW4mainE8CopyableE: Ref<$"main.<private name>.TypeInfo">), UnsafePtr<UnsafePtr<i8>> bitcast (@_CTPNW4mainE11MemoryOrderENW_0E8CopyableE: Ref<$[1 x UnsafeRawPtr]>) to UnsafePtr<UnsafePtr<i8>> }, struct $"main.<private name>.ProtocolConformance" { UnsafePtr<$"main.<private name>.TypeInfo"> addr_of (@_CTINW4mainE18ImplicitlyCopyableE: Ref<$"main.<private name>.TypeInfo">), UnsafePtr<UnsafePtr<i8>> bitcast (@_CTPNW4mainE11MemoryOrderENW_0E18ImplicitlyCopyableE: Ref<$[0 x UnsafeRawPtr]>) to UnsafePtr<UnsafePtr<i8>> }, struct $"main.<private name>.ProtocolConformance" { UnsafePtr<$"main.<private name>.TypeInfo"> null, UnsafePtr<UnsafePtr<i8>> null }]
@_CTINW4mainE6AtomicIlEE = constant struct $"main.<private name>.TypeInfo" { UnsafePtr<$"main.<private name>.TypeInfo"> null, UnsafePtr<UnsafeRawPtr> null, $(UnsafeMutableRawPtr) -> void bitcast ($(MutRef<$"main.Atomic<i64>">) -> void @_CNW4mainE6AtomicIlED0Ev) to $(UnsafeMutableRawPtr) -> void, UnsafePtr<u8> "main.Atomic<i64>", UnsafePtr<$"main.<private name>.ValueWitnessTable"> addr_of (@2: Ref<$"main.<private name>.ValueWitnessTable">), UnsafePtr<$"main.<private name>.ProtocolConformance"> bitcast (@3: Ref<$[4 x $"main.<private name>.ProtocolConformance"]>) to UnsafePtr<$"main.<private name>.ProtocolConformance">, struct $"main.<private name>.Int64" { i64 8 }, struct $"main.<private name>.Int64" { i64 8 }, struct $"main.<private name>.Int64" { i64 8 } }
@2 = constant struct $"main.<private name>.ValueWitnessTable" { $(UnsafeMutableRawPtr, UnsafeRawPtr) -> void bitcast ($($"main.Atomic<i64>") -> $"main.Atomic<i64>" @_CNW4mainE6AtomicIlE4copyES0_L0) to $(UnsafeMutableRawPtr, UnsafeRawPtr) -> void, $(UnsafeMutableRawPtr) -> void bitcast ($(MutRef<$"main.Atomic<i64>">) -> void @_CNW4mainE6AtomicIlED0Ev) to $(UnsafeMutableRawPtr) -> void }
@_CTPNW4mainE6AtomicIlEENW_0E3AnyE = constant $[0 x UnsafeRawPtr] []
@_CTPNW4mainE6AtomicIlEENW_0E8CopyableE = constant $[1 x UnsafeRawPtr] [UnsafeRawPtr bitcast ($($"main.Atomic<i64>") -> $"main.Atomic<i64>" @_CNW4mainE6AtomicIlE4copyES0_L0) to UnsafeRawPtr]
@_CTPNW4mainE6AtomicIlEENW_0E18ImplicitlyCopyableE = constant $[0 x UnsafeRawPtr] []
@3 = constant $[4 x $"main.<private name>.ProtocolConformance"] [struct $"main.<private name>.ProtocolConformance" { UnsafePtr<$"main.<private name>.TypeInfo"> addr_of (@_CTINW4mainE3AnyE: Ref<$"main.<private name>.TypeInfo">), UnsafePtr<UnsafePtr<i8>> bitcast (@_CTPNW4mainE6AtomicIlEENW_0E3AnyE: Ref<$[0 x UnsafeRawPtr]>) to UnsafePtr<UnsafePtr<i8>> }, struct $"main.<private name>.ProtocolConformance" { UnsafePtr<$"main.<private name>.TypeInfo"> addr_of (@_CTINW4mainE8CopyableE: Ref<$"main.<private name>.TypeInfo">), UnsafePtr<UnsafePtr<i8>> bitcast (@_CTPNW4mainE6AtomicIlEENW_0E8CopyableE: Ref<$[1 x UnsafeRawPtr]>) to UnsafePtr<UnsafePtr<i8>> }, struct $"main.<private name>.ProtocolConformance" { UnsafePtr<$"main.<private name>.TypeInfo"> addr_of (@_CTINW4mainE18ImplicitlyCopyableE: Ref<$"main.<private name>.TypeInfo">), UnsafePtr<UnsafePtr<i8>> bitcast (@_CTPNW4mainE6AtomicIlEENW_0E18ImplicitlyCopyableE: Ref<$[0 x UnsafeRawPtr]>) to UnsafePtr<UnsafePtr<i8>> }, struct $"main.<private name>.ProtocolConformance" { UnsafePtr<$"main.<private name>.TypeInfo"> null, UnsafePtr<UnsafePtr<i8>> null }]
@4 = private unnamed_addr MetaType<$"main.Atomic<i64>"> undef
@5 = private unnamed_addr MetaType<$"main.Atomic<i64>"> undef
@_CTINW4mainE4BoolE = constant struct $"main.<private name>.TypeInfo" { UnsafePtr<$"main.<private name>.TypeInfo"> null, UnsafePtr<UnsafeRawPtr> null, $(UnsafeMutableRawPtr) -> void bitcast ($(MutRef<$"main.<private name>.Bool">) -> void @_CNW4mainE4BoolD0Ev) to $(UnsafeMutableRawPtr) -> void, UnsafePtr<u8> "main.<private name>.Bool", UnsafePtr<$"main.<private name>.ValueWitnessTable"> addr_of (@6: Ref<$"main.<private name>.ValueWitnessTable">), UnsafePtr<$"main.<private name>.ProtocolConformance"> bitcast (@7: Ref<$[4 x $"main.<private name>.ProtocolConformance"]>) to UnsafePtr<$"main.<private name>.ProtocolConformance">, struct $"main.<private name>.Int64" { i64 1 }, struct $"main.<private name>.Int64" { i64 1 }, struct $"main.<private name>.Int64" { i64 1 } }
@6 = constant struct $"main.<private name>.ValueWitnessTable" { $(UnsafeMutableRawPtr, UnsafeRawPtr) -> void bitcast ($($"main.<private name>.Bool") -> $"main.<private name>.Bool" @_CNW4mainE4Bool4copyES0_L0) to $(UnsafeMutableRawPtr, UnsafeRawPtr) -> void, $(UnsafeMutableRawPtr) -> void bitcast ($(MutRef<$"main.<private name>.Bool">) -> void @_CNW4mainE4BoolD0Ev) to $(UnsafeMutableRawPtr) -> void }
@_CTPNW4mainE4BoolENS_3AnyE = constant $[0 x UnsafeRawPtr] []
@_CTPNW4mainE4BoolENS_8CopyableE = constant $[1 x UnsafeRawPtr] [UnsafeRawPtr bitcast ($($"main.<private name>.Bool") -> $"main.<private name>.Bool" @_CNW4mainE4Bool4copyES0_L0) to UnsafeRawPtr]
@_CTPNW4mainE4BoolENS_18ImplicitlyCopyableE = constant $[0 x UnsafeRawPtr] []
@7 = constant $[4 x $"main.<private name>.ProtocolConformance"] [struct $"main.<private name>.ProtocolConformance" { UnsafePtr<$"main.<private name>.TypeInfo"> addr_of (@_CTINW4mainE3AnyE: Ref<$"main.<private name>.TypeInfo">), UnsafePtr<UnsafePtr<i8>> bitcast (@_CTPNW4mainE4BoolENS_3AnyE: Ref<$[0 x UnsafeRawPtr]>) to UnsafePtr<UnsafePtr<i8>> }, struct $"main.<private name>.ProtocolConformance" { UnsafePtr<$"main.<private name>.TypeInfo"> addr_of (@_CTINW4mainE8CopyableE: Ref<$"main.<private name>.TypeInfo">), UnsafePtr<UnsafePtr<i8>> bitcast (@_CTPNW4mainE4BoolENS_8CopyableE: Ref<$[1 x UnsafeRawPtr]>) to UnsafePtr<UnsafePtr<i8>> }, struct $"main.<private name>.ProtocolConformance" { UnsafePtr<$"main.<private name>.TypeInfo"> addr_of (@_CTINW4mainE18ImplicitlyCopyableE: Ref<$"main.<private name>.TypeInfo">), UnsafePtr<UnsafePtr<i8>> bitcast (@_CTPNW4mainE4BoolENS_18ImplicitlyCopyableE: Ref<$[0 x UnsafeRawPtr]>) to UnsafePtr<UnsafePtr<i8>> }, struct $"main.<private name>.ProtocolConformance" { UnsafePtr<$"main.<private name>.TypeInfo"> null, UnsafePtr<UnsafePtr<i8>> null }]
@_CTINW4mainE17ValueWitnessTableE = constant struct $"main.<private name>.TypeInfo" { UnsafePtr<$"main.<private name>.TypeInfo"> null, UnsafePtr<UnsafeRawPtr> null, $(UnsafeMutableRawPtr) -> void bitcast ($(MutRef<$"main.<private name>.ValueWitnessTable">) -> void @_CNW4mainE17ValueWitnessTableD0Ev) to $(UnsafeMutableRawPtr) -> void, UnsafePtr<u8> "main.<private name>.ValueWitnessTable", UnsafePtr<$"main.<private name>.ValueWitnessTable"> addr_of (@8: Ref<$"main.<private name>.ValueWitnessTable">), UnsafePtr<$"main.<private name>.ProtocolConformance"> bitcast (@9: Ref<$[2 x $"main.<private name>.ProtocolConformance"]>) to UnsafePtr<$"main.<private name>.ProtocolConformance">, struct $"main.<private name>.Int64" { i64 16 }, struct $"main.<private name>.Int64" { i64 8 }, struct $"main.<private name>.Int64" { i64 16 } }
@8 = constant struct $"main.<private name>.ValueWitnessTable" { $(UnsafeMutableRawPtr, UnsafeRawPtr) -> void bitcast ($(UnsafeMutableRawPtr, UnsafeRawPtr) -> void null) to $(UnsafeMutableRawPtr, UnsafeRawPtr) -> void, $(UnsafeMutableRawPtr) -> void bitcast ($(MutRef<$"main.<private name>.ValueWitnessTable">) -> void @_CNW4mainE17ValueWitnessTableD0Ev) to $(UnsafeMutableRawPtr) -> void }
@_CTPNW4mainE17ValueWitnessTableENS_3AnyE = constant $[0 x UnsafeRawPtr] []
@9 = constant $[2 x $"main.<private name>.ProtocolConformance"] [struct $"main.<private name>.ProtocolConformance" { UnsafePtr<$"main.<private name>.TypeInfo"> addr_of (@_CTINW4mainE3AnyE: Ref<$"main.<private name>.TypeInfo">), UnsafePtr<UnsafePtr<i8>> bitcast (@_CTPNW4mainE17ValueWitnessTableENS_3AnyE: Ref<$[0 x UnsafeRawPtr]>) to UnsafePtr<UnsafePtr<i8>> }, struct $"main.<private name>.ProtocolConformance" { UnsafePtr<$"main.<private name>.TypeInfo"> null, UnsafePtr<UnsafePtr<i8>> null }]
@_CTINW4mainE19ProtocolConformanceE = constant struct $"main.<private name>.TypeInfo" { UnsafePtr<$"main.<private name>.TypeInfo"> null, UnsafePtr<UnsafeRawPtr> null, $(UnsafeMutableRawPtr) -> void bitcast ($(MutRef<$"main.<private name>.ProtocolConformance">) -> void @_CNW4mainE19ProtocolConformanceD0Ev) to $(UnsafeMutableRawPtr) -> void, UnsafePtr<u8> "main.<private name>.ProtocolConformance", UnsafePtr<$"main.<private name>.ValueWitnessTable"> addr_of (@10: Ref<$"main.<private name>.ValueWitnessTable">), UnsafePtr<$"main.<private name>.ProtocolConformance"> bitcast (@11: Ref<$[2 x $"main.<private name>.ProtocolConformance"]>) to UnsafePtr<$"main.<private name>.ProtocolConformance">, struct $"main.<private name>.Int64" { i64 16 }, struct $"main.<private name>.Int64" { i64 8 }, struct $"main.<private name>.Int64" { i64 16 } }
@10 = constant struct $"main.<private name>.ValueWitnessTable" { $(UnsafeMutableRawPtr, UnsafeRawPtr) -> void bitcast ($(UnsafeMutableRawPtr, UnsafeRawPtr) -> void null) to $(UnsafeMutableRawPtr, UnsafeRawPtr) -> void, $(UnsafeMutableRawPtr) -> void bitcast ($(MutRef<$"main.<private name>.ProtocolConformance">) -> void @_CNW4mainE19ProtocolConformanceD0Ev) to $(UnsafeMutableRawPtr) -> void }
@_CTPNW4mainE19ProtocolConformanceENS_3AnyE = constant $[0 x UnsafeRawPtr] []
@11 = constant $[2 x $"main.<private name>.ProtocolConformance"] [struct $"main.<private name>.ProtocolConformance" { UnsafePtr<$"main.<private name>.TypeInfo"> addr_of (@_CTINW4mainE3AnyE: Ref<$"main.<private name>.TypeInfo">), UnsafePtr<UnsafePtr<i8>> bitcast (@_CTPNW4mainE19ProtocolConformanceENS_3AnyE: Ref<$[0 x UnsafeRawPtr]>) to UnsafePtr<UnsafePtr<i8>> }, struct $"main.<private name>.ProtocolConformance" { UnsafePtr<$"main.<private name>.TypeInfo"> null, UnsafePtr<UnsafePtr<i8>> null }]
@_CTINW4mainE8TypeInfoE = constant struct $"main.<private name>.TypeInfo" { UnsafePtr<$"main.<private name>.TypeInfo"> null, UnsafePtr<UnsafeRawPtr> null, $(UnsafeMutableRawPtr) -> void bitcast ($(MutRef<$"main.<private name>.TypeInfo">) -> void @_CNW4mainE8TypeInfoD0Ev) to $(UnsafeMutableRawPtr) -> void, UnsafePtr<u8> "main.<private name>.TypeInfo", UnsafePtr<$"main.<private name>.ValueWitnessTable"> addr_of (@12: Ref<$"main.<private name>.ValueWitnessTable">), UnsafePtr<$"main.<private name>.ProtocolConformance"> bitcast (@13: Ref<$[2 x $"main.<private name>.ProtocolConformance"]>) to UnsafePtr<$"main.<private name>.ProtocolConformance">, struct $"main.<private name>.Int64" { i64 72 }, struct $"main.<private name>.Int64" { i64 8 }, struct $"main.<private name>.Int64" { i64 72 } }
@12 = constant struct $"main.<private name>.ValueWitnessTable" { $(UnsafeMutableRawPtr, UnsafeRawPtr) -> void bitcast ($(UnsafeMutableRawPtr, UnsafeRawPtr) -> void null) to $(UnsafeMutableRawPtr, UnsafeRawPtr) -> void, $(UnsafeMutableRawPtr) -> void bitcast ($(MutRef<$"main.<private name>.TypeInfo">) -> void @_CNW4mainE8TypeInfoD0Ev) to $(UnsafeMutableRawPtr) -> void }
@_CTPNW4mainE8TypeInfoENS_3AnyE = constant $[0 x UnsafeRawPtr] []
@13 = constant $[2 x $"main.<private name>.ProtocolConformance"] [struct $"main.<private name>.ProtocolConformance" { UnsafePtr<$"main.<private name>.TypeInfo"> addr_of (@_CTINW4mainE3AnyE: Ref<$"main.<private name>.TypeInfo">), UnsafePtr<UnsafePtr<i8>> bitcast (@_CTPNW4mainE8TypeInfoENS_3AnyE: Ref<$[0 x UnsafeRawPtr]>) to UnsafePtr<UnsafePtr<i8>> }, struct $"main.<private name>.ProtocolConformance" { UnsafePtr<$"main.<private name>.TypeInfo"> null, UnsafePtr<UnsafePtr<i8>> null }]
@_CTINW4mainE5Int64E = constant struct $"main.<private name>.TypeInfo" { UnsafePtr<$"main.<private name>.TypeInfo"> null, UnsafePtr<UnsafeRawPtr> null, $(UnsafeMutableRawPtr) -> void bitcast ($(MutRef<$"main.<private name>.Int64">) -> void @_CNW4mainE5Int64D0Ev) to $(UnsafeMutableRawPtr) -> void, UnsafePtr<u8> "main.<private name>.Int64", UnsafePtr<$"main.<private name>.ValueWitnessTable"> addr_of (@14: Ref<$"main.<private name>.ValueWitnessTable">), UnsafePtr<$"main.<private name>.ProtocolConformance"> bitcast (@15: Ref<$[4 x $"main.<private name>.ProtocolConformance"]>) to UnsafePtr<$"main.<private name>.ProtocolConformance">, struct $"main.<private name>.Int64" { i64 8 }, struct $"main.<private name>.Int64" { i64 8 }, struct $"main.<private name>.Int64" { i64 8 } }
@14 = constant struct $"main.<private name>.ValueWitnessTable" { $(UnsafeMutableRawPtr, UnsafeRawPtr) -> void bitcast ($($"main.<private name>.Int64") -> $"main.<private name>.Int64" @_CNW4mainE5Int644copyES0_L0) to $(UnsafeMutableRawPtr, UnsafeRawPtr) -> void, $(UnsafeMutableRawPtr) -> void bitcast ($(MutRef<$"main.<private name>.Int64">) -> void @_CNW4mainE5Int64D0Ev) to $(UnsafeMutableRawPtr) -> void }
@_CTPNW4mainE5Int64ENS_3AnyE = constant $[0 x UnsafeRawPtr] []
@_CTPNW4mainE5Int64ENS_8CopyableE = constant $[1 x UnsafeRawPtr] [UnsafeRawPtr bitcast ($($"main.<private name>.Int64") -> $"main.<private name>.Int64" @_CNW4mainE5Int644copyES0_L0) to UnsafeRawPtr]
@_CTPNW4mainE5Int64ENS_18ImplicitlyCopyableE = constant $[0 x UnsafeRawPtr] []
@15 = constant $[4 x $"main.<private name>.ProtocolConformance"] [struct $"main.<private name>.ProtocolConformance" { UnsafePtr<$"main.<private name>.TypeInfo"> addr_of (@_CTINW4mainE3AnyE: Ref<$"main.<private name>.TypeInfo">), UnsafePtr<UnsafePtr<i8>> bitcast (@_CTPNW4mainE5Int64ENS_3AnyE: Ref<$[0 x UnsafeRawPtr]>) to UnsafePtr<UnsafePtr<i8>> }, struct $"main.<private name>.ProtocolConformance" { UnsafePtr<$"main.<private name>.TypeInfo"> addr_of (@_CTINW4mainE8CopyableE: Ref<$"main.<private name>.TypeInfo">), UnsafePtr<UnsafePtr<i8>> bitcast (@_CTPNW4mainE5Int64ENS_8CopyableE: Ref<$[1 x UnsafeRawPtr]>) to UnsafePtr<UnsafePtr<i8>> }, struct $"main.<private name>.ProtocolConformance" { UnsafePtr<$"main.<private name>.TypeInfo"> addr_of (@_CTINW4mainE18ImplicitlyCopyableE: Ref<$"main.<private name>.TypeInfo">), UnsafePtr<UnsafePtr<i8>> bitcast (@_CTPNW4mainE5Int64ENS_18ImplicitlyCopyableE: Ref<$[0 x UnsafeRawPtr]>) to UnsafePtr<UnsafePtr<i8>> }, struct $"main.<private name>.ProtocolConformance" { UnsafePtr<$"main.<private name>.TypeInfo"> null, UnsafePtr<UnsafePtr<i8>> null }]
@_CTINW4mainE20ExistentialContainerE = constant struct $"main.<private name>.TypeInfo" { UnsafePtr<$"main.<private name>.TypeInfo"> null, UnsafePtr<UnsafeRawPtr> null, $(UnsafeMutableRawPtr) -> void bitcast ($(MutRef<$"main.<private name>.ExistentialContainer">) -> void @_CNW4mainE20ExistentialContainerD0Ev) to $(UnsafeMutableRawPtr) -> void, UnsafePtr<u8> "main.<private name>.ExistentialContainer", UnsafePtr<$"main.<private name>.ValueWitnessTable"> addr_of (@16: Ref<$"main.<private name>.ValueWitnessTable">), UnsafePtr<$"main.<private name>.ProtocolConformance"> bitcast (@17: Ref<$[2 x $"main.<private name>.ProtocolConformance"]>) to UnsafePtr<$"main.<private name>.ProtocolConformance">, struct $"main.<private name>.Int64" { i64 24 }, struct $"main.<private name>.Int64" { i64 8 }, struct $"main.<private name>.Int64" { i64 24 } }
@16 = constant struct $"main.<private name>.ValueWitnessTable" { $(UnsafeMutableRawPtr, UnsafeRawPtr) -> void bitcast ($(UnsafeMutableRawPtr, UnsafeRawPtr) -> void null) to $(UnsafeMutableRawPtr, UnsafeRawPtr) -> void, $(UnsafeMutableRawPtr) -> void bitcast ($(MutRef<$"main.<private name>.ExistentialContainer">) -> void @_CNW4mainE20ExistentialContainerD0Ev) to $(UnsafeMutableRawPtr) -> void }
@_CTPNW4mainE20ExistentialContainerENS_3AnyE = constant $[0 x UnsafeRawPtr] []
@17 = constant $[2 x $"main.<private name>.ProtocolConformance"] [struct $"main.<private name>.ProtocolConformance" { UnsafePtr<$"main.<private name>.TypeInfo"> addr_of (@_CTINW4mainE3AnyE: Ref<$"main.<private name>.TypeInfo">), UnsafePtr<UnsafePtr<i8>> bitcast (@_CTPNW4mainE20ExistentialContainerENS_3AnyE: Ref<$[0 x UnsafeRawPtr]>) to UnsafePtr<UnsafePtr<i8>> }, struct $"main.<private name>.ProtocolConformance" { UnsafePtr<$"main.<private name>.TypeInfo"> null, UnsafePtr<UnsafePtr<i8>> null }]

; main._start()
define @_CNW4mainE6_startEv() -> void {
entry:
   %5 = init_struct $"main.Atomic<i64>", @_CNW4mainE6AtomicIlEC1ElL10weirdValue(i64 12)
   %a = alloc_stack $"main.Atomic<i64>"
   init %5: $"main.Atomic<i64>", %a: MutRef<$"main.Atomic<i64>">
   call intrinsic void "lifetime_begin" (%a: MutRef<$"main.Atomic<i64>">)
   %12 = init_enum $main.MemoryOrder, %SequentiallyConsistent
   %13 = begin_mut_borrow %a: MutRef<$"main.Atomic<i64>">
   %15 = call $() @_CNW4mainE6AtomicIlE5storeERS0_lNW_0E11MemoryOrderEL0L0L11memoryOrder(%a: MutRef<$"main.Atomic<i64>">, i64 69, %12: $main.MemoryOrder)
   end_mut_borrow %13: MutRef<$"main.Atomic<i64>">
   %19 = load %a: MutRef<$"main.Atomic<i64>">
   %21 = init_enum $main.MemoryOrder, %SequentiallyConsistent
   %22 = begin_mut_borrow %a: MutRef<$"main.Atomic<i64>">
   %24 = call i64 @_CNW4mainE6AtomicIlE4loadES0_NW_0E11MemoryOrderEL0L11memoryOrder(%19: $"main.Atomic<i64>", %21: $main.MemoryOrder)
   end_mut_borrow %22: MutRef<$"main.Atomic<i64>">
   %x = alloc_stack [let] i64
   init %24: i64, %x: Ref<i64>
   call intrinsic void "lifetime_begin" (%x: Ref<i64>)
   %32 = load %x: Ref<i64>
   %34 = call i32 @printf(UnsafePtr<u8> "value: %llu\0A", %32: i64)
   call intrinsic void "lifetime_end" (%x: Ref<i64>)
   call intrinsic void "lifetime_end" (%a: MutRef<$"main.Atomic<i64>">)
   call void @_CNW4mainE6AtomicIlED0Ev(%a: MutRef<$"main.Atomic<i64>">)
   ret void
}

define @main() -> i32 {
entry:
   call void @_CNW4mainE6_startEv()
   ret i32 0
}

; main.Atomic<i64>.init(weirdValue: owned i64)
define @_CNW4mainE6AtomicIlEC1ElL10weirdValue([mut ref] MutRef<$"main.Atomic<i64>">, [owned] i64) -> void {
entry(%self: MutRef<$"main.Atomic<i64>">, %1: i64):
   %2 = load %self: MutRef<$"main.Atomic<i64>">
   call void @_CNW4mainE6AtomicIlE14__default_initES0_L0(%2: $"main.Atomic<i64>")
   %weirdValue = alloc_stack i64
   init %1: i64, %weirdValue: MutRef<i64>
   %10 = load %weirdValue: MutRef<i64>
   call void @_CNW4mainE6AtomicIlEC2ERS0_lL0L5value(%self: MutRef<$"main.Atomic<i64>">, %10: i64)
   call intrinsic void "lifetime_end" (%weirdValue: MutRef<i64>)
   ret void
}

; main.Atomic<i64>.store(_ self: mut ref &mut main.Atomic<i64>, _ storeVal: owned i64, memoryOrder: main.MemoryOrder)
define @_CNW4mainE6AtomicIlE5storeERS0_lNW_0E11MemoryOrderEL0L0L11memoryOrder([mut ref] MutRef<$"main.Atomic<i64>">, [owned] i64, [borrow] $main.MemoryOrder) -> $() {
entry(%0: MutRef<$"main.Atomic<i64>">, %1: i64, %2: $main.MemoryOrder):
   %storeVal = alloc_stack i64
   init %1: i64, %storeVal: MutRef<i64>
   %memoryOrder = alloc_stack [let] $main.MemoryOrder
   init %2: $main.MemoryOrder, %memoryOrder: Ref<$main.MemoryOrder>
   %11 = load @4: MutRef<MetaType<$"main.Atomic<i64>">>
   %13 = load %memoryOrder: Ref<$main.MemoryOrder>
   %14 = begin_mut_borrow @4: MutRef<MetaType<$"main.Atomic<i64>">>
   %16 = call $() @_CNW4mainE6AtomicIlE20checkValidStoreOrderEMS0_NW_0E11MemoryOrderEL0L0(%11: MetaType<$"main.Atomic<i64>">, %13: $main.MemoryOrder)
   end_mut_borrow %14: MutRef<MetaType<$"main.Atomic<i64>">>
   %19 = load %0: MutRef<$"main.Atomic<i64>">
   %20 = field_ref MutRef<i64> $"main.Atomic<i64>"::value, %19: $"main.Atomic<i64>"
   %21 = bitcast %20: MutRef<i64> to MutRef<i64>
   %22 = load %21: MutRef<i64>
   %23 = addr_of %21: MutRef<i64>
   %addr = alloc_stack [let] UnsafeMutablePtr<i64>
   init %23: UnsafeMutablePtr<i64>, %addr: Ref<UnsafeMutablePtr<i64>>
   call intrinsic void "lifetime_begin" (%addr: Ref<UnsafeMutablePtr<i64>>)
   %28 = load %storeVal: MutRef<i64>
   %29 = load %addr: Ref<UnsafeMutablePtr<i64>>
   %30 = load %memoryOrder: Ref<$main.MemoryOrder>
   %31 = call i32 @_CNW4mainE11MemoryOrderGa8rawValueES_L0(%30: $main.MemoryOrder)
   %32 = bitcast %29: UnsafeMutablePtr<i64> to MutRef<i64>
   switch %31: i32, default label @unreachable [
      case i32 2, label @atomic.store.relaxed
      case i32 5, label @atomic.store.release
      case i32 7, label @atomic.store.seq_cst
   ]

; preds: label @entry
unreachable:
   unreachable

; preds: label @entry
atomic.store.relaxed:
   store atomic [relaxed] %28: i64, %32: MutRef<i64>
   br label @atomic.store.merge

; preds: label @atomic.store.relaxed, label @atomic.store.release, label @atomic.store.seq_cst
atomic.store.merge:
   call intrinsic void "lifetime_end" (%addr: Ref<UnsafeMutablePtr<i64>>)
   call intrinsic void "lifetime_end" (%storeVal: MutRef<i64>)
   ret $() undef

; preds: label @entry
atomic.store.release:
   store atomic [release] %28: i64, %32: MutRef<i64>
   br label @atomic.store.merge

; preds: label @entry
atomic.store.seq_cst:
   store atomic [seq_cst] %28: i64, %32: MutRef<i64>
   br label @atomic.store.merge
}

; main.Atomic<i64>.load(_ self: main.Atomic<i64>.Self (aka main.Atomic<i64>), memoryOrder: main.MemoryOrder)
define @_CNW4mainE6AtomicIlE4loadES0_NW_0E11MemoryOrderEL0L11memoryOrder([borrow] $"main.Atomic<i64>", [borrow] $main.MemoryOrder) -> i64 {
entry(%0: $"main.Atomic<i64>", %1: $main.MemoryOrder):
   %3 = alloc_stack [let] $"main.Atomic<i64>"
   init %0: $"main.Atomic<i64>", %3: Ref<$"main.Atomic<i64>">
   %memoryOrder = alloc_stack [let] $main.MemoryOrder
   init %1: $main.MemoryOrder, %memoryOrder: Ref<$main.MemoryOrder>
   %10 = load @5: MutRef<MetaType<$"main.Atomic<i64>">>
   %12 = load %memoryOrder: Ref<$main.MemoryOrder>
   %13 = begin_mut_borrow @5: MutRef<MetaType<$"main.Atomic<i64>">>
   %15 = call $() @_CNW4mainE6AtomicIlE19checkValidLoadOrderEMS0_NW_0E11MemoryOrderEL0L0(%10: MetaType<$"main.Atomic<i64>">, %12: $main.MemoryOrder)
   end_mut_borrow %13: MutRef<MetaType<$"main.Atomic<i64>">>
   %18 = load %3: Ref<$"main.Atomic<i64>">
   %19 = field_ref [let] Ref<i64> $"main.Atomic<i64>"::value, %18: $"main.Atomic<i64>"
   %20 = load %19: Ref<i64>
   %21 = bitcast %19: Ref<i64> to Ref<i64>
   %22 = addr_of %21: Ref<i64>
   %addr = alloc_stack [let] UnsafePtr<i64>
   init %22: UnsafePtr<i64>, %addr: Ref<UnsafePtr<i64>>
   call intrinsic void "lifetime_begin" (%addr: Ref<UnsafePtr<i64>>)
   %27 = load %addr: Ref<UnsafePtr<i64>>
   %28 = load %memoryOrder: Ref<$main.MemoryOrder>
   %29 = call i32 @_CNW4mainE11MemoryOrderGa8rawValueES_L0(%28: $main.MemoryOrder)
   %30 = bitcast %27: UnsafePtr<i64> to Ref<i64>
   switch %29: i32, default label @unreachable [
      case i32 2, label @atomic.load.relaxed
      case i32 3, label @atomic.load.consume
      case i32 4, label @atomic.load.acquire
      case i32 7, label @atomic.load.seq_cst
   ]

; preds: label @entry
unreachable:
   unreachable

; preds: label @entry
atomic.load.relaxed:
   %34 = load atomic [relaxed] %30: Ref<i64>
   br label @atomic.load.merge(%34: i64)

; preds: label @atomic.load.relaxed, label @atomic.load.consume, label @atomic.load.acquire, label @atomic.load.seq_cst
atomic.load.merge(%31: i64):
   call intrinsic void "lifetime_end" (%addr: Ref<UnsafePtr<i64>>)
   ret %31: i64

; preds: label @entry
atomic.load.consume:
   %36 = load atomic [consume] %30: Ref<i64>
   br label @atomic.load.merge(%36: i64)

; preds: label @entry
atomic.load.acquire:
   %38 = load atomic [acquire] %30: Ref<i64>
   br label @atomic.load.merge(%38: i64)

; preds: label @entry
atomic.load.seq_cst:
   %40 = load atomic [seq_cst] %30: Ref<i64>
   br label @atomic.load.merge(%40: i64)
}

; libc.stdio.printf(_ <invalid name>: builtin.RawPointer<u8>)
declare @printf([borrow] UnsafePtr<u8>, ...) -> i32

; main.Atomic<i64>.deinit()
define @_CNW4mainE6AtomicIlED0Ev([mut ref] MutRef<$"main.Atomic<i64>">) -> void {
entry(%self: MutRef<$"main.Atomic<i64>">):
   call void @_CNW4mainE6AtomicIlED3Ev(%self: MutRef<$"main.Atomic<i64>">)
   ret void
}

; main.MemoryOrder.deinit()
define @_CNW4mainE11MemoryOrderD0Ev([mut ref] MutRef<$main.MemoryOrder>) -> void {
entry(%self: MutRef<$main.MemoryOrder>):
   call void @_CNW4mainE11MemoryOrderD3Ev(%self: MutRef<$main.MemoryOrder>)
   ret void
}

; main.MemoryOrder.copy(_ self: main.MemoryOrder.Self (aka main.MemoryOrder))
define @_CNW4mainE11MemoryOrder4copyES_L0([borrow] $main.MemoryOrder) -> $main.MemoryOrder {
entry(%0: $main.MemoryOrder):
   ret %0: $main.MemoryOrder
}

; main.MemoryOrder.infix ==(_ self: main.MemoryOrder.Self (aka main.MemoryOrder), _ that: main.MemoryOrder)
define @"_CNW4mainE11MemoryOrderXi2==ES_S_L0L0"([borrow] $main.MemoryOrder, [borrow] $main.MemoryOrder) -> $"main.<private name>.Bool" {
entry(%0: $main.MemoryOrder, %1: $main.MemoryOrder):
   %3 = enum_value %0: $main.MemoryOrder
   %4 = enum_value %1: $main.MemoryOrder
   %5 = comp eq %3: i64, %4: i64
   %6 = alloc_stack $"main.<private name>.Bool"
   %7 = load %6: MutRef<$"main.<private name>.Bool">
   %8 = gep u64 0, %7: $"main.<private name>.Bool"
   store %5: u1, %8: MutRef<u1>
   ret %7: $"main.<private name>.Bool"
}

; main.MemoryOrder.infix !=(_ self: main.MemoryOrder.Self (aka main.MemoryOrder), _ rhs: main.MemoryOrder.Self (aka main.MemoryOrder))
define @"_CNW4mainE11MemoryOrderXi2!=ES_S_L0L0"([borrow] $main.MemoryOrder, [borrow] $main.MemoryOrder) -> $"main.<private name>.Bool" {
entry(%0: $main.MemoryOrder, %1: $main.MemoryOrder):
   %3 = alloc_stack [let] $main.MemoryOrder
   init %0: $main.MemoryOrder, %3: Ref<$main.MemoryOrder>
   %rhs = alloc_stack [let] $main.MemoryOrder
   init %1: $main.MemoryOrder, %rhs: Ref<$main.MemoryOrder>
   %8 = load %3: Ref<$main.MemoryOrder>
   %9 = load %rhs: Ref<$main.MemoryOrder>
   %10 = begin_mut_borrow %3: Ref<$main.MemoryOrder>
   %11 = call $"main.<private name>.Bool" @"_CNW4mainE11MemoryOrderXi2==ES_S_L0L0"(%8: $main.MemoryOrder, %9: $main.MemoryOrder)
   end_mut_borrow %10: Ref<$main.MemoryOrder>
   %13 = call $"main.<private name>.Bool" @"_CNW4mainE4BoolXp1!ES0_L0"(%11: $"main.<private name>.Bool")
   %14 = alloc_stack $"main.<private name>.Bool"
   store %11: $"main.<private name>.Bool", %14: MutRef<$"main.<private name>.Bool">
   call void @_CNW4mainE4BoolD0Ev(%14: MutRef<$"main.<private name>.Bool">)
   ret %13: $"main.<private name>.Bool"
}

; main.MemoryOrder.init(rawValue: owned i32 (aka i32))
define @_CNW4mainE11MemoryOrderC1EiL8rawValue([mut ref] MutRef<$main.MemoryOrder>, [owned] i32) -> void {
entry(%self: MutRef<$main.MemoryOrder>, %1: i32):
   switch %1: i32, default label @init.failure [
      case i32 0, label @init.case.NotAtomic
      case i32 1, label @init.case.Relaxed
      case i32 2, label @init.case.Consume
      case i32 3, label @init.case.Acquire
      case i32 4, label @init.case.Release
      case i32 5, label @init.case.AcquireRelease
      case i32 6, label @init.case.SequentiallyConsistent
   ]

; preds: label @entry
init.failure:
   %38 = load %self: MutRef<$main.MemoryOrder>
   dealloc_stack %38: $main.MemoryOrder
   call intrinsic void "memset" (%self: MutRef<$main.MemoryOrder>, u8 0, u64 8)
   ret void

; preds: label @entry
init.case.NotAtomic:
   %3 = init_enum $main.MemoryOrder, %NotAtomic
   %4 = alloc_stack $main.MemoryOrder
   store %3: $main.MemoryOrder, %4: MutRef<$main.MemoryOrder>
   call intrinsic void "memcpy" (%self: MutRef<$main.MemoryOrder>, %4: MutRef<$main.MemoryOrder>, u64 8)
   ret void

; preds: label @entry
init.case.Relaxed:
   %8 = init_enum $main.MemoryOrder, %Relaxed
   %9 = alloc_stack $main.MemoryOrder
   store %8: $main.MemoryOrder, %9: MutRef<$main.MemoryOrder>
   call intrinsic void "memcpy" (%self: MutRef<$main.MemoryOrder>, %9: MutRef<$main.MemoryOrder>, u64 8)
   ret void

; preds: label @entry
init.case.Consume:
   %13 = init_enum $main.MemoryOrder, %Consume
   %14 = alloc_stack $main.MemoryOrder
   store %13: $main.MemoryOrder, %14: MutRef<$main.MemoryOrder>
   call intrinsic void "memcpy" (%self: MutRef<$main.MemoryOrder>, %14: MutRef<$main.MemoryOrder>, u64 8)
   ret void

; preds: label @entry
init.case.Acquire:
   %18 = init_enum $main.MemoryOrder, %Acquire
   %19 = alloc_stack $main.MemoryOrder
   store %18: $main.MemoryOrder, %19: MutRef<$main.MemoryOrder>
   call intrinsic void "memcpy" (%self: MutRef<$main.MemoryOrder>, %19: MutRef<$main.MemoryOrder>, u64 8)
   ret void

; preds: label @entry
init.case.Release:
   %23 = init_enum $main.MemoryOrder, %Release
   %24 = alloc_stack $main.MemoryOrder
   store %23: $main.MemoryOrder, %24: MutRef<$main.MemoryOrder>
   call intrinsic void "memcpy" (%self: MutRef<$main.MemoryOrder>, %24: MutRef<$main.MemoryOrder>, u64 8)
   ret void

; preds: label @entry
init.case.AcquireRelease:
   %28 = init_enum $main.MemoryOrder, %AcquireRelease
   %29 = alloc_stack $main.MemoryOrder
   store %28: $main.MemoryOrder, %29: MutRef<$main.MemoryOrder>
   call intrinsic void "memcpy" (%self: MutRef<$main.MemoryOrder>, %29: MutRef<$main.MemoryOrder>, u64 8)
   ret void

; preds: label @entry
init.case.SequentiallyConsistent:
   %33 = init_enum $main.MemoryOrder, %SequentiallyConsistent
   %34 = alloc_stack $main.MemoryOrder
   store %33: $main.MemoryOrder, %34: MutRef<$main.MemoryOrder>
   call intrinsic void "memcpy" (%self: MutRef<$main.MemoryOrder>, %34: MutRef<$main.MemoryOrder>, u64 8)
   ret void
}

; main.MemoryOrder.get rawValue(_ self: main.MemoryOrder.Self (aka main.MemoryOrder))
define @_CNW4mainE11MemoryOrderGa8rawValueES_L0([borrow] $main.MemoryOrder) -> i32 {
entry(%0: $main.MemoryOrder):
   %2 = enum_value %0: $main.MemoryOrder
   ret %2: i64
}

define @_CNW4mainE11MemoryOrderD3Ev([owned] MutRef<$main.MemoryOrder>) -> void {
entry(%0: MutRef<$main.MemoryOrder>):
   %2 = load %0: MutRef<$main.MemoryOrder>
   %3 = enum_value %2: $main.MemoryOrder
   switch %3: i64, default label @unreachable [
      case i32 0, label @case.NotAtomic
      case i32 1, label @case.Relaxed
      case i32 2, label @case.Consume
      case i32 3, label @case.Acquire
      case i32 4, label @case.Release
      case i32 5, label @case.AcquireRelease
      case i32 6, label @case.SequentiallyConsistent
   ]

; preds: label @case.NotAtomic, label @case.Relaxed, label @case.Consume, label @case.Acquire, label @case.Release, label @case.AcquireRelease, label @case.SequentiallyConsistent
merge:
   ret void

; preds: label @entry
unreachable:
   unreachable

; preds: label @entry
case.NotAtomic:
   br label @merge

; preds: label @entry
case.Relaxed:
   br label @merge

; preds: label @entry
case.Consume:
   br label @merge

; preds: label @entry
case.Acquire:
   br label @merge

; preds: label @entry
case.Release:
   br label @merge

; preds: label @entry
case.AcquireRelease:
   br label @merge

; preds: label @entry
case.SequentiallyConsistent:
   br label @merge
}

; main.<private name>.Bool.prefix !(_ self: main.<private name>.Bool.Self (aka main.<private name>.Bool))
define @"_CNW4mainE4BoolXp1!ES0_L0"([borrow] $"main.<private name>.Bool") -> $"main.<private name>.Bool" {
entry(%0: $"main.<private name>.Bool"):
   %2 = alloc_stack [let] $"main.<private name>.Bool"
   init %0: $"main.<private name>.Bool", %2: Ref<$"main.<private name>.Bool">
   %5 = load %2: Ref<$"main.<private name>.Bool">
   %6 = field_ref [let] Ref<u1> $"main.<private name>.Bool"::value, %5: $"main.<private name>.Bool"
   %7 = load %6: Ref<u1>
   %8 = neg %7: u1
   %9 = init_struct $"main.<private name>.Bool", @_CNW4mainE4BoolC1EbL5value(%8: u1)
   ret %9: $"main.<private name>.Bool"
}

; main.<private name>.Bool.deinit()
define @_CNW4mainE4BoolD0Ev([mut ref] MutRef<$"main.<private name>.Bool">) -> void {
entry(%self: MutRef<$"main.<private name>.Bool">):
   call void @_CNW4mainE4BoolD3Ev(%self: MutRef<$"main.<private name>.Bool">)
   ret void
}

; main.MemoryOrder.init(_ self: mut ref &mut main.MemoryOrder, rawValue: owned i32 (aka i32))
declare @_CNW4mainE11MemoryOrderC2ERS_iL0L8rawValue([mut ref] MutRef<$main.MemoryOrder>, [owned] i32) -> void

; main.Atomic<i64>.copy(_ self: main.Atomic<i64>.Self (aka main.Atomic<i64>))
define @_CNW4mainE6AtomicIlE4copyES0_L0([borrow] $"main.Atomic<i64>") -> $"main.Atomic<i64>" {
entry(%0: $"main.Atomic<i64>"):
   %2 = alloc_stack $"main.Atomic<i64>"
   %3 = load %2: MutRef<$"main.Atomic<i64>">
   %4 = gep u64 0, %3: $"main.Atomic<i64>"
   %5 = gep u64 0, %0: $"main.Atomic<i64>"
   %6 = load %5: MutRef<i64>
   init %6: i64, %4: MutRef<i64>
   ret %3: $"main.Atomic<i64>"
}

; main.Atomic<i64>.__default_init(_ self: main.Atomic<i64>.Self (aka main.Atomic<i64>))
define @_CNW4mainE6AtomicIlE14__default_initES0_L0([borrow] $"main.Atomic<i64>") -> void {
entry(%0: $"main.Atomic<i64>"):
   ret void
}

define @_CNW4mainE6AtomicIlED3Ev([owned] MutRef<$"main.Atomic<i64>">) -> void {
entry(%0: MutRef<$"main.Atomic<i64>">):
   %2 = load %0: MutRef<$"main.Atomic<i64>">
   %3 = gep u64 0, %2: $"main.Atomic<i64>"
   call intrinsic void "lifetime_end" (%3: MutRef<i64>)
   ret void
}

; main.Atomic<i64>.init(_ self: mut ref &mut main.Atomic<i64>, value: owned i64)
define @_CNW4mainE6AtomicIlEC2ERS0_lL0L5value([mut ref] MutRef<$"main.Atomic<i64>">, [owned] i64) -> void {
entry(%0: MutRef<$"main.Atomic<i64>">, %1: i64):
   %value = alloc_stack i64
   init %1: i64, %value: MutRef<i64>
   %8 = load %0: MutRef<$"main.Atomic<i64>">
   %9 = field_ref MutRef<i64> $"main.Atomic<i64>"::value, %8: $"main.Atomic<i64>"
   %10 = load %value: MutRef<i64>
   call intrinsic void "lifetime_begin" (%9: MutRef<i64>)
   init %10: i64, %9: MutRef<i64>
   call intrinsic void "lifetime_end" (%value: MutRef<i64>)
   ret void
}

; main.Atomic<i64>.init(value: owned i64)
declare @_CNW4mainE6AtomicIlEC1ElL5value([mut ref] MutRef<$"main.Atomic<i64>">, [owned] i64) -> void

; main.Atomic<i64>.init(_ self: mut ref &mut main.Atomic<i64>, weirdValue: owned i64)
define @_CNW4mainE6AtomicIlEC2ERS0_lL0L10weirdValue([mut ref] MutRef<$"main.Atomic<i64>">, [owned] i64) -> void {
entry(%0: MutRef<$"main.Atomic<i64>">, %1: i64):
   %weirdValue = alloc_stack i64
   init %1: i64, %weirdValue: MutRef<i64>
   %9 = load %weirdValue: MutRef<i64>
   call void @_CNW4mainE6AtomicIlEC2ERS0_lL0L5value(%0: MutRef<$"main.Atomic<i64>">, %9: i64)
   call intrinsic void "lifetime_end" (%weirdValue: MutRef<i64>)
   ret void
}

; main.Atomic<i64>.checkValidStoreOrder(_ self: MetaType<main.Atomic<i64>.Self (aka main.Atomic<i64>)>, _ memoryOrder: main.MemoryOrder)
define @_CNW4mainE6AtomicIlE20checkValidStoreOrderEMS0_NW_0E11MemoryOrderEL0L0([borrow] MetaType<$"main.Atomic<i64>">, [borrow] $main.MemoryOrder) -> $() {
entry(%0: MetaType<$"main.Atomic<i64>">, %1: $main.MemoryOrder):
   %3 = alloc_stack [let] MetaType<$"main.Atomic<i64>">
   init %0: MetaType<$"main.Atomic<i64>">, %3: Ref<MetaType<$"main.Atomic<i64>">>
   %memoryOrder = alloc_stack [let] $main.MemoryOrder
   init %1: $main.MemoryOrder, %memoryOrder: Ref<$main.MemoryOrder>
   %11 = load %memoryOrder: Ref<$main.MemoryOrder>
   br label @match.cmp

; preds: label @entry
match.cmp:
   %15 = init_enum $main.MemoryOrder, %Consume
   %16 = call u1 @"_CNW4mainEXi2~=INW_0E11MemoryOrderEEEbNW_0E11MemoryOrderENW_0E11MemoryOrderEL0L0"(%11: $main.MemoryOrder, %15: $main.MemoryOrder)
   br %16: u1, label @match.body, label @match.cmp.0

; preds: label @match.cmp
match.body:
   br label @match.body.0

; preds: label @match.body, label @match.cmp.0
match.body.0:
   br label @match.body.1

; preds: label @match.body.0, label @match.cmp.1
match.body.1:
   br label @match.body.2

; preds: label @match.body.1, label @match.cmp.2
match.body.2:
   %34 = load %memoryOrder: Ref<$main.MemoryOrder>
   %36 = call i32 @printf(UnsafePtr<u8> "memory order %d is not valid for store\0A", %34: $main.MemoryOrder)
   br label @match.merge

; preds: label @match.cmp
match.cmp.0:
   %20 = init_enum $main.MemoryOrder, %Acquire
   %21 = call u1 @"_CNW4mainEXi2~=INW_0E11MemoryOrderEEEbNW_0E11MemoryOrderENW_0E11MemoryOrderEL0L0"(%11: $main.MemoryOrder, %20: $main.MemoryOrder)
   br %21: u1, label @match.body.0, label @match.cmp.1

; preds: label @match.body.2
match.merge:
   ret $() undef

; preds: label @match.cmp.0
match.cmp.1:
   %24 = init_enum $main.MemoryOrder, %AcquireRelease
   %25 = call u1 @"_CNW4mainEXi2~=INW_0E11MemoryOrderEEEbNW_0E11MemoryOrderENW_0E11MemoryOrderEL0L0"(%11: $main.MemoryOrder, %24: $main.MemoryOrder)
   br %25: u1, label @match.body.1, label @match.cmp.2

; preds: label @match.cmp.1
match.cmp.2:
   %28 = init_enum $main.MemoryOrder, %NotAtomic
   %29 = call u1 @"_CNW4mainEXi2~=INW_0E11MemoryOrderEEEbNW_0E11MemoryOrderENW_0E11MemoryOrderEL0L0"(%11: $main.MemoryOrder, %28: $main.MemoryOrder)
   br %29: u1, label @match.body.2, label @match.body.default

; preds: label @match.cmp.2
match.body.default:
   ret $() ()
}

; main.Atomic<i64>.checkValidLoadOrder(_ self: MetaType<main.Atomic<i64>.Self (aka main.Atomic<i64>)>, _ memoryOrder: main.MemoryOrder)
define @_CNW4mainE6AtomicIlE19checkValidLoadOrderEMS0_NW_0E11MemoryOrderEL0L0([borrow] MetaType<$"main.Atomic<i64>">, [borrow] $main.MemoryOrder) -> $() {
entry(%0: MetaType<$"main.Atomic<i64>">, %1: $main.MemoryOrder):
   %3 = alloc_stack [let] MetaType<$"main.Atomic<i64>">
   init %0: MetaType<$"main.Atomic<i64>">, %3: Ref<MetaType<$"main.Atomic<i64>">>
   %memoryOrder = alloc_stack [let] $main.MemoryOrder
   init %1: $main.MemoryOrder, %memoryOrder: Ref<$main.MemoryOrder>
   %11 = load %memoryOrder: Ref<$main.MemoryOrder>
   br label @match.cmp

; preds: label @entry
match.cmp:
   %15 = init_enum $main.MemoryOrder, %Release
   %16 = call u1 @"_CNW4mainEXi2~=INW_0E11MemoryOrderEEEbNW_0E11MemoryOrderENW_0E11MemoryOrderEL0L0"(%11: $main.MemoryOrder, %15: $main.MemoryOrder)
   br %16: u1, label @match.body, label @match.cmp.0

; preds: label @match.cmp
match.body:
   br label @match.body.0

; preds: label @match.body, label @match.cmp.0
match.body.0:
   br label @match.body.1

; preds: label @match.body.0, label @match.cmp.1
match.body.1:
   %30 = load %memoryOrder: Ref<$main.MemoryOrder>
   %32 = call i32 @printf(UnsafePtr<u8> "memory order %d is not valid for load\0A", %30: $main.MemoryOrder)
   br label @match.merge

; preds: label @match.cmp
match.cmp.0:
   %20 = init_enum $main.MemoryOrder, %AcquireRelease
   %21 = call u1 @"_CNW4mainEXi2~=INW_0E11MemoryOrderEEEbNW_0E11MemoryOrderENW_0E11MemoryOrderEL0L0"(%11: $main.MemoryOrder, %20: $main.MemoryOrder)
   br %21: u1, label @match.body.0, label @match.cmp.1

; preds: label @match.body.1
match.merge:
   ret $() undef

; preds: label @match.cmp.0
match.cmp.1:
   %24 = init_enum $main.MemoryOrder, %NotAtomic
   %25 = call u1 @"_CNW4mainEXi2~=INW_0E11MemoryOrderEEEbNW_0E11MemoryOrderENW_0E11MemoryOrderEL0L0"(%11: $main.MemoryOrder, %24: $main.MemoryOrder)
   br %25: u1, label @match.body.1, label @match.body.default

; preds: label @match.cmp.1
match.body.default:
   ret $() ()
}

; main.infix ~=<main.MemoryOrder>(_ lhs: main.MemoryOrder, _ rhs: main.MemoryOrder)
define @"_CNW4mainEXi2~=INW_0E11MemoryOrderEEEbNW_0E11MemoryOrderENW_0E11MemoryOrderEL0L0"([borrow] $main.MemoryOrder, [borrow] $main.MemoryOrder) -> u1 {
entry(%0: $main.MemoryOrder, %1: $main.MemoryOrder):
   %lhs = alloc_stack [let] $main.MemoryOrder
   init %0: $main.MemoryOrder, %lhs: Ref<$main.MemoryOrder>
   %rhs = alloc_stack [let] $main.MemoryOrder
   init %1: $main.MemoryOrder, %rhs: Ref<$main.MemoryOrder>
   %9 = load %lhs: Ref<$main.MemoryOrder>
   %10 = bitcast %lhs: Ref<$main.MemoryOrder> to Ref<$main.MemoryOrder>
   %11 = addr_of %10: Ref<$main.MemoryOrder>
   %12 = bitcast %11: UnsafePtr<$main.MemoryOrder> to UnsafePtr<i64>
   %13 = bitcast %12: UnsafePtr<i64> to MutRef<i64>
   %14 = load %13: MutRef<i64>
   %v1 = alloc_stack i64
   init %14: i64, %v1: MutRef<i64>
   call intrinsic void "lifetime_begin" (%v1: MutRef<i64>)
   %19 = load %rhs: Ref<$main.MemoryOrder>
   %20 = bitcast %rhs: Ref<$main.MemoryOrder> to Ref<$main.MemoryOrder>
   %21 = addr_of %20: Ref<$main.MemoryOrder>
   %22 = bitcast %21: UnsafePtr<$main.MemoryOrder> to UnsafePtr<i64>
   %23 = bitcast %22: UnsafePtr<i64> to MutRef<i64>
   %24 = load %23: MutRef<i64>
   %v2 = alloc_stack i64
   init %24: i64, %v2: MutRef<i64>
   call intrinsic void "lifetime_begin" (%v2: MutRef<i64>)
   %30 = load %v1: MutRef<i64>
   %32 = load %v2: MutRef<i64>
   %34 = call u1 @"_CNW7builtin3opsEXi2==EllL0L0"(%30: i64, %32: i64)
   call intrinsic void "lifetime_end" (%v2: MutRef<i64>)
   call intrinsic void "lifetime_end" (%v1: MutRef<i64>)
   ret %34: u1
}

; builtin.ops.infix ==(_ lhs: i64 (aka i64), _ rhs: i64 (aka i64))
declare @"_CNW7builtin3opsEXi2==EllL0L0"([borrow] i64, [borrow] i64) -> u1

; main.<private name>.Bool.copy(_ self: main.<private name>.Bool.Self (aka main.<private name>.Bool))
define @_CNW4mainE4Bool4copyES0_L0([borrow] $"main.<private name>.Bool") -> $"main.<private name>.Bool" {
entry(%0: $"main.<private name>.Bool"):
   %2 = alloc_stack $"main.<private name>.Bool"
   %3 = load %2: MutRef<$"main.<private name>.Bool">
   %4 = gep u64 0, %3: $"main.<private name>.Bool"
   %5 = gep u64 0, %0: $"main.<private name>.Bool"
   %6 = load %5: MutRef<u1>
   init %6: u1, %4: MutRef<u1>
   ret %3: $"main.<private name>.Bool"
}

; main.<private name>.Bool.__default_init(_ self: main.<private name>.Bool.Self (aka main.<private name>.Bool))
define @_CNW4mainE4Bool14__default_initES0_L0([borrow] $"main.<private name>.Bool") -> void {
entry(%0: $"main.<private name>.Bool"):
   ret void
}

; main.<private name>.Bool.init(value: owned i1)
define @_CNW4mainE4BoolC1EbL5value([mut ref] MutRef<$"main.<private name>.Bool">, [owned] u1) -> void {
entry(%self: MutRef<$"main.<private name>.Bool">, %1: u1):
   %2 = load %self: MutRef<$"main.<private name>.Bool">
   call void @_CNW4mainE4Bool14__default_initES0_L0(%2: $"main.<private name>.Bool")
   %4 = gep u64 0, %2: $"main.<private name>.Bool"
   init %1: u1, %4: MutRef<u1>
   ret void
}

; main.<private name>.Bool.init(_ self: mut ref &mut main.<private name>.Bool, value: owned i1)
define @_CNW4mainE4BoolC2ERS0_bL0L5value([mut ref] MutRef<$"main.<private name>.Bool">, [owned] u1) -> void {
entry(%0: MutRef<$"main.<private name>.Bool">, %1: u1):
   %3 = load %0: MutRef<$"main.<private name>.Bool">
   %4 = gep u64 0, %3: $"main.<private name>.Bool"
   init %1: u1, %4: MutRef<u1>
   ret void
}

define @_CNW4mainE4BoolD3Ev([owned] MutRef<$"main.<private name>.Bool">) -> void {
entry(%0: MutRef<$"main.<private name>.Bool">):
   %2 = load %0: MutRef<$"main.<private name>.Bool">
   %3 = gep u64 0, %2: $"main.<private name>.Bool"
   call intrinsic void "lifetime_end" (%3: MutRef<u1>)
   ret void
}

; main.<private name>.ValueWitnessTable.deinit()
define @_CNW4mainE17ValueWitnessTableD0Ev([mut ref] MutRef<$"main.<private name>.ValueWitnessTable">) -> void {
entry(%self: MutRef<$"main.<private name>.ValueWitnessTable">):
   call void @_CNW4mainE17ValueWitnessTableD3Ev(%self: MutRef<$"main.<private name>.ValueWitnessTable">)
   ret void
}

; main.<private name>.ValueWitnessTable.__default_init(_ self: main.<private name>.ValueWitnessTable.Self (aka main.<private name>.ValueWitnessTable))
define @_CNW4mainE17ValueWitnessTable14__default_initES0_L0([borrow] $"main.<private name>.ValueWitnessTable") -> void {
entry(%0: $"main.<private name>.ValueWitnessTable"):
   ret void
}

; main.<private name>.ValueWitnessTable.init(copyFn: owned @thin (borrow builtin.RawMutablePointer, borrow builtin.RawPointer) -> Void, deinit: owned @thin (borrow builtin.RawMutablePointer) -> Void)
define @_CNW4mainE17ValueWitnessTableC1EDoFvPvKPvEDoFvS1_EL6copyFnL6deinit([mut ref] MutRef<$"main.<private name>.ValueWitnessTable">, [owned] $(UnsafeMutableRawPtr, UnsafeRawPtr) -> void, [owned] $(UnsafeMutableRawPtr) -> void) -> void {
entry(%self: MutRef<$"main.<private name>.ValueWitnessTable">, %1: $(UnsafeMutableRawPtr, UnsafeRawPtr) -> void, %2: $(UnsafeMutableRawPtr) -> void):
   %3 = load %self: MutRef<$"main.<private name>.ValueWitnessTable">
   call void @_CNW4mainE17ValueWitnessTable14__default_initES0_L0(%3: $"main.<private name>.ValueWitnessTable")
   %5 = gep u64 0, %3: $"main.<private name>.ValueWitnessTable"
   init %1: $(UnsafeMutableRawPtr, UnsafeRawPtr) -> void, %5: MutRef<$(UnsafeMutableRawPtr, UnsafeRawPtr) -> void>
   %7 = gep u64 1, %3: $"main.<private name>.ValueWitnessTable"
   init %2: $(UnsafeMutableRawPtr) -> void, %7: MutRef<$(UnsafeMutableRawPtr) -> void>
   ret void
}

; main.<private name>.ValueWitnessTable.init(_ self: mut ref &mut main.<private name>.ValueWitnessTable, copyFn: owned @thin (borrow builtin.RawMutablePointer, borrow builtin.RawPointer) -> Void, deinit: owned @thin (borrow builtin.RawMutablePointer) -> Void)
define @_CNW4mainE17ValueWitnessTableC2ERS0_DoFvPvKPvEDoFvS2_EL0L6copyFnL6deinit([mut ref] MutRef<$"main.<private name>.ValueWitnessTable">, [owned] $(UnsafeMutableRawPtr, UnsafeRawPtr) -> void, [owned] $(UnsafeMutableRawPtr) -> void) -> void {
entry(%0: MutRef<$"main.<private name>.ValueWitnessTable">, %1: $(UnsafeMutableRawPtr, UnsafeRawPtr) -> void, %2: $(UnsafeMutableRawPtr) -> void):
   %4 = load %0: MutRef<$"main.<private name>.ValueWitnessTable">
   %5 = gep u64 0, %4: $"main.<private name>.ValueWitnessTable"
   init %1: $(UnsafeMutableRawPtr, UnsafeRawPtr) -> void, %5: MutRef<$(UnsafeMutableRawPtr, UnsafeRawPtr) -> void>
   %7 = gep u64 1, %4: $"main.<private name>.ValueWitnessTable"
   init %2: $(UnsafeMutableRawPtr) -> void, %7: MutRef<$(UnsafeMutableRawPtr) -> void>
   ret void
}

define @_CNW4mainE17ValueWitnessTableD3Ev([owned] MutRef<$"main.<private name>.ValueWitnessTable">) -> void {
entry(%0: MutRef<$"main.<private name>.ValueWitnessTable">):
   %2 = load %0: MutRef<$"main.<private name>.ValueWitnessTable">
   %3 = gep u64 0, %2: $"main.<private name>.ValueWitnessTable"
   %4 = gep u64 1, %2: $"main.<private name>.ValueWitnessTable"
   call intrinsic void "lifetime_end" (%4: MutRef<$(UnsafeMutableRawPtr) -> void>)
   call intrinsic void "lifetime_end" (%3: MutRef<$(UnsafeMutableRawPtr, UnsafeRawPtr) -> void>)
   ret void
}

; main.<private name>.ProtocolConformance.deinit()
define @_CNW4mainE19ProtocolConformanceD0Ev([mut ref] MutRef<$"main.<private name>.ProtocolConformance">) -> void {
entry(%self: MutRef<$"main.<private name>.ProtocolConformance">):
   call void @_CNW4mainE19ProtocolConformanceD3Ev(%self: MutRef<$"main.<private name>.ProtocolConformance">)
   ret void
}

; main.<private name>.ProtocolConformance.__default_init(_ self: main.<private name>.ProtocolConformance.Self (aka main.<private name>.ProtocolConformance))
define @_CNW4mainE19ProtocolConformance14__default_initES0_L0([borrow] $"main.<private name>.ProtocolConformance") -> void {
entry(%0: $"main.<private name>.ProtocolConformance"):
   ret void
}

; main.<private name>.ProtocolConformance.init(typeInfo: owned builtin.RawPointer<main.<private name>.TypeInfo>, vtable: owned builtin.RawPointer<builtin.RawPointer>)
define @_CNW4mainE19ProtocolConformanceC1EKPNS_8TypeInfoEKPKPvL8typeInfoL6vtable([mut ref] MutRef<$"main.<private name>.ProtocolConformance">, [owned] UnsafePtr<$"main.<private name>.TypeInfo">, [owned] UnsafePtr<UnsafeRawPtr>) -> void {
entry(%self: MutRef<$"main.<private name>.ProtocolConformance">, %1: UnsafePtr<$"main.<private name>.TypeInfo">, %2: UnsafePtr<UnsafeRawPtr>):
   %3 = load %self: MutRef<$"main.<private name>.ProtocolConformance">
   call void @_CNW4mainE19ProtocolConformance14__default_initES0_L0(%3: $"main.<private name>.ProtocolConformance")
   %5 = gep u64 0, %3: $"main.<private name>.ProtocolConformance"
   init %1: UnsafePtr<$"main.<private name>.TypeInfo">, %5: MutRef<UnsafePtr<$"main.<private name>.TypeInfo">>
   %7 = gep u64 1, %3: $"main.<private name>.ProtocolConformance"
   init %2: UnsafePtr<UnsafeRawPtr>, %7: MutRef<UnsafePtr<UnsafeRawPtr>>
   ret void
}

; main.<private name>.ProtocolConformance.init(_ self: mut ref &mut main.<private name>.ProtocolConformance, typeInfo: owned builtin.RawPointer<main.<private name>.TypeInfo>, vtable: owned builtin.RawPointer<builtin.RawPointer>)
define @_CNW4mainE19ProtocolConformanceC2ERS0_KPNS_8TypeInfoEKPKPvL0L8typeInfoL6vtable([mut ref] MutRef<$"main.<private name>.ProtocolConformance">, [owned] UnsafePtr<$"main.<private name>.TypeInfo">, [owned] UnsafePtr<UnsafeRawPtr>) -> void {
entry(%0: MutRef<$"main.<private name>.ProtocolConformance">, %1: UnsafePtr<$"main.<private name>.TypeInfo">, %2: UnsafePtr<UnsafeRawPtr>):
   %4 = load %0: MutRef<$"main.<private name>.ProtocolConformance">
   %5 = gep u64 0, %4: $"main.<private name>.ProtocolConformance"
   init %1: UnsafePtr<$"main.<private name>.TypeInfo">, %5: MutRef<UnsafePtr<$"main.<private name>.TypeInfo">>
   %7 = gep u64 1, %4: $"main.<private name>.ProtocolConformance"
   init %2: UnsafePtr<UnsafeRawPtr>, %7: MutRef<UnsafePtr<UnsafeRawPtr>>
   ret void
}

define @_CNW4mainE19ProtocolConformanceD3Ev([owned] MutRef<$"main.<private name>.ProtocolConformance">) -> void {
entry(%0: MutRef<$"main.<private name>.ProtocolConformance">):
   %2 = load %0: MutRef<$"main.<private name>.ProtocolConformance">
   %3 = gep u64 0, %2: $"main.<private name>.ProtocolConformance"
   %4 = gep u64 1, %2: $"main.<private name>.ProtocolConformance"
   call intrinsic void "lifetime_end" (%4: MutRef<UnsafePtr<UnsafeRawPtr>>)
   call intrinsic void "lifetime_end" (%3: MutRef<UnsafePtr<$"main.<private name>.TypeInfo">>)
   ret void
}

; main.<private name>.TypeInfo.deinit()
define @_CNW4mainE8TypeInfoD0Ev([mut ref] MutRef<$"main.<private name>.TypeInfo">) -> void {
entry(%self: MutRef<$"main.<private name>.TypeInfo">):
   call void @_CNW4mainE8TypeInfoD3Ev(%self: MutRef<$"main.<private name>.TypeInfo">)
   ret void
}

; main.<private name>.TypeInfo.__default_init(_ self: main.<private name>.TypeInfo.Self (aka main.<private name>.TypeInfo))
define @_CNW4mainE8TypeInfo14__default_initES0_L0([borrow] $"main.<private name>.TypeInfo") -> void {
entry(%0: $"main.<private name>.TypeInfo"):
   ret void
}

; main.<private name>.TypeInfo.init(baseClass: owned builtin.RawPointer<main.<private name>.TypeInfo>, vtable: owned builtin.RawPointer<builtin.RawPointer>, deinit: owned @thin (borrow builtin.RawMutablePointer) -> Void, name: owned builtin.RawPointer<u8>, valueWitnessTable: owned builtin.RawPointer<main.<private name>.ValueWitnessTable>, conformances: owned builtin.RawPointer<main.<private name>.ProtocolConformance>, size: owned u64, alignment: owned u64, stride: owned u64)
define @_CNW4mainE8TypeInfoC1EKPS0_KPKPvDoFvPvEKPhKPNS_17ValueWitnessTableEKPNS_19ProtocolConformanceEmmmL9baseClassL6vtableL6deinitL4nameL17valueWitnessTableL12conformancesL4sizeL9alignmentL6stride([mut ref] MutRef<$"main.<private name>.TypeInfo">, [owned] UnsafePtr<$"main.<private name>.TypeInfo">, [owned] UnsafePtr<UnsafeRawPtr>, [owned] $(UnsafeMutableRawPtr) -> void, [owned] UnsafePtr<u8>, [owned] UnsafePtr<$"main.<private name>.ValueWitnessTable">, [owned] UnsafePtr<$"main.<private name>.ProtocolConformance">, [owned] u64, [owned] u64, [owned] u64) -> void {
entry(%self: MutRef<$"main.<private name>.TypeInfo">, %1: UnsafePtr<$"main.<private name>.TypeInfo">, %2: UnsafePtr<UnsafeRawPtr>, %3: $(UnsafeMutableRawPtr) -> void, %4: UnsafePtr<u8>, %5: UnsafePtr<$"main.<private name>.ValueWitnessTable">, %6: UnsafePtr<$"main.<private name>.ProtocolConformance">, %7: u64, %8: u64, %9: u64):
   %10 = load %self: MutRef<$"main.<private name>.TypeInfo">
   call void @_CNW4mainE8TypeInfo14__default_initES0_L0(%10: $"main.<private name>.TypeInfo")
   %12 = gep u64 0, %10: $"main.<private name>.TypeInfo"
   init %1: UnsafePtr<$"main.<private name>.TypeInfo">, %12: MutRef<UnsafePtr<$"main.<private name>.TypeInfo">>
   %14 = gep u64 1, %10: $"main.<private name>.TypeInfo"
   init %2: UnsafePtr<UnsafeRawPtr>, %14: MutRef<UnsafePtr<UnsafeRawPtr>>
   %16 = gep u64 2, %10: $"main.<private name>.TypeInfo"
   init %3: $(UnsafeMutableRawPtr) -> void, %16: MutRef<$(UnsafeMutableRawPtr) -> void>
   %18 = gep u64 3, %10: $"main.<private name>.TypeInfo"
   init %4: UnsafePtr<u8>, %18: MutRef<UnsafePtr<u8>>
   %20 = gep u64 4, %10: $"main.<private name>.TypeInfo"
   init %5: UnsafePtr<$"main.<private name>.ValueWitnessTable">, %20: MutRef<UnsafePtr<$"main.<private name>.ValueWitnessTable">>
   %22 = gep u64 5, %10: $"main.<private name>.TypeInfo"
   init %6: UnsafePtr<$"main.<private name>.ProtocolConformance">, %22: MutRef<UnsafePtr<$"main.<private name>.ProtocolConformance">>
   %24 = gep u64 6, %10: $"main.<private name>.TypeInfo"
   init %7: u64, %24: MutRef<u64>
   %26 = gep u64 7, %10: $"main.<private name>.TypeInfo"
   init %8: u64, %26: MutRef<u64>
   %28 = gep u64 8, %10: $"main.<private name>.TypeInfo"
   init %9: u64, %28: MutRef<u64>
   ret void
}

; main.<private name>.TypeInfo.init(_ self: mut ref &mut main.<private name>.TypeInfo, baseClass: owned builtin.RawPointer<main.<private name>.TypeInfo>, vtable: owned builtin.RawPointer<builtin.RawPointer>, deinit: owned @thin (borrow builtin.RawMutablePointer) -> Void, name: owned builtin.RawPointer<u8>, valueWitnessTable: owned builtin.RawPointer<main.<private name>.ValueWitnessTable>, conformances: owned builtin.RawPointer<main.<private name>.ProtocolConformance>, size: owned u64, alignment: owned u64, stride: owned u64)
define @_CNW4mainE8TypeInfoC2ERS0_KPS0_KPKPvDoFvPvEKPhKPNS_17ValueWitnessTableEKPNS_19ProtocolConformanceEmmmL0L9baseClassL6vtableL6deinitL4nameL17valueWitnessTableL12conformancesL4sizeL9alignmentL6stride([mut ref] MutRef<$"main.<private name>.TypeInfo">, [owned] UnsafePtr<$"main.<private name>.TypeInfo">, [owned] UnsafePtr<UnsafeRawPtr>, [owned] $(UnsafeMutableRawPtr) -> void, [owned] UnsafePtr<u8>, [owned] UnsafePtr<$"main.<private name>.ValueWitnessTable">, [owned] UnsafePtr<$"main.<private name>.ProtocolConformance">, [owned] u64, [owned] u64, [owned] u64) -> void {
entry(%0: MutRef<$"main.<private name>.TypeInfo">, %1: UnsafePtr<$"main.<private name>.TypeInfo">, %2: UnsafePtr<UnsafeRawPtr>, %3: $(UnsafeMutableRawPtr) -> void, %4: UnsafePtr<u8>, %5: UnsafePtr<$"main.<private name>.ValueWitnessTable">, %6: UnsafePtr<$"main.<private name>.ProtocolConformance">, %7: u64, %8: u64, %9: u64):
   %11 = load %0: MutRef<$"main.<private name>.TypeInfo">
   %12 = gep u64 0, %11: $"main.<private name>.TypeInfo"
   init %1: UnsafePtr<$"main.<private name>.TypeInfo">, %12: MutRef<UnsafePtr<$"main.<private name>.TypeInfo">>
   %14 = gep u64 1, %11: $"main.<private name>.TypeInfo"
   init %2: UnsafePtr<UnsafeRawPtr>, %14: MutRef<UnsafePtr<UnsafeRawPtr>>
   %16 = gep u64 2, %11: $"main.<private name>.TypeInfo"
   init %3: $(UnsafeMutableRawPtr) -> void, %16: MutRef<$(UnsafeMutableRawPtr) -> void>
   %18 = gep u64 3, %11: $"main.<private name>.TypeInfo"
   init %4: UnsafePtr<u8>, %18: MutRef<UnsafePtr<u8>>
   %20 = gep u64 4, %11: $"main.<private name>.TypeInfo"
   init %5: UnsafePtr<$"main.<private name>.ValueWitnessTable">, %20: MutRef<UnsafePtr<$"main.<private name>.ValueWitnessTable">>
   %22 = gep u64 5, %11: $"main.<private name>.TypeInfo"
   init %6: UnsafePtr<$"main.<private name>.ProtocolConformance">, %22: MutRef<UnsafePtr<$"main.<private name>.ProtocolConformance">>
   %24 = gep u64 6, %11: $"main.<private name>.TypeInfo"
   init %7: u64, %24: MutRef<u64>
   %26 = gep u64 7, %11: $"main.<private name>.TypeInfo"
   init %8: u64, %26: MutRef<u64>
   %28 = gep u64 8, %11: $"main.<private name>.TypeInfo"
   init %9: u64, %28: MutRef<u64>
   ret void
}

define @_CNW4mainE8TypeInfoD3Ev([owned] MutRef<$"main.<private name>.TypeInfo">) -> void {
entry(%0: MutRef<$"main.<private name>.TypeInfo">):
   %2 = load %0: MutRef<$"main.<private name>.TypeInfo">
   %3 = gep u64 0, %2: $"main.<private name>.TypeInfo"
   %4 = gep u64 1, %2: $"main.<private name>.TypeInfo"
   %5 = gep u64 2, %2: $"main.<private name>.TypeInfo"
   %6 = gep u64 3, %2: $"main.<private name>.TypeInfo"
   %7 = gep u64 4, %2: $"main.<private name>.TypeInfo"
   %8 = gep u64 5, %2: $"main.<private name>.TypeInfo"
   %9 = gep u64 6, %2: $"main.<private name>.TypeInfo"
   %10 = gep u64 7, %2: $"main.<private name>.TypeInfo"
   %11 = gep u64 8, %2: $"main.<private name>.TypeInfo"
   call intrinsic void "lifetime_end" (%11: MutRef<u64>)
   call intrinsic void "lifetime_end" (%10: MutRef<u64>)
   call intrinsic void "lifetime_end" (%9: MutRef<u64>)
   call intrinsic void "lifetime_end" (%8: MutRef<UnsafePtr<$"main.<private name>.ProtocolConformance">>)
   call intrinsic void "lifetime_end" (%7: MutRef<UnsafePtr<$"main.<private name>.ValueWitnessTable">>)
   call intrinsic void "lifetime_end" (%6: MutRef<UnsafePtr<u8>>)
   call intrinsic void "lifetime_end" (%5: MutRef<$(UnsafeMutableRawPtr) -> void>)
   call intrinsic void "lifetime_end" (%4: MutRef<UnsafePtr<UnsafeRawPtr>>)
   call intrinsic void "lifetime_end" (%3: MutRef<UnsafePtr<$"main.<private name>.TypeInfo">>)
   ret void
}

; main.<private name>.Int64.deinit()
define @_CNW4mainE5Int64D0Ev([mut ref] MutRef<$"main.<private name>.Int64">) -> void {
entry(%self: MutRef<$"main.<private name>.Int64">):
   call void @_CNW4mainE5Int64D3Ev(%self: MutRef<$"main.<private name>.Int64">)
   ret void
}

; main.<private name>.Int64.copy(_ self: main.<private name>.Int64.Self (aka main.<private name>.Int64))
define @_CNW4mainE5Int644copyES0_L0([borrow] $"main.<private name>.Int64") -> $"main.<private name>.Int64" {
entry(%0: $"main.<private name>.Int64"):
   %2 = alloc_stack $"main.<private name>.Int64"
   %3 = load %2: MutRef<$"main.<private name>.Int64">
   %4 = gep u64 0, %3: $"main.<private name>.Int64"
   %5 = gep u64 0, %0: $"main.<private name>.Int64"
   %6 = load %5: MutRef<i64>
   init %6: i64, %4: MutRef<i64>
   ret %3: $"main.<private name>.Int64"
}

; main.<private name>.Int64.__default_init(_ self: main.<private name>.Int64.Self (aka main.<private name>.Int64))
define @_CNW4mainE5Int6414__default_initES0_L0([borrow] $"main.<private name>.Int64") -> void {
entry(%0: $"main.<private name>.Int64"):
   ret void
}

; main.<private name>.Int64.init(value: owned i64)
define @_CNW4mainE5Int64C1ElL5value([mut ref] MutRef<$"main.<private name>.Int64">, [owned] i64) -> void {
entry(%self: MutRef<$"main.<private name>.Int64">, %1: i64):
   %2 = load %self: MutRef<$"main.<private name>.Int64">
   call void @_CNW4mainE5Int6414__default_initES0_L0(%2: $"main.<private name>.Int64")
   %4 = gep u64 0, %2: $"main.<private name>.Int64"
   init %1: i64, %4: MutRef<i64>
   ret void
}

; main.<private name>.Int64.init(_ self: mut ref &mut main.<private name>.Int64, value: owned i64)
define @_CNW4mainE5Int64C2ERS0_lL0L5value([mut ref] MutRef<$"main.<private name>.Int64">, [owned] i64) -> void {
entry(%0: MutRef<$"main.<private name>.Int64">, %1: i64):
   %3 = load %0: MutRef<$"main.<private name>.Int64">
   %4 = gep u64 0, %3: $"main.<private name>.Int64"
   init %1: i64, %4: MutRef<i64>
   ret void
}

define @_CNW4mainE5Int64D3Ev([owned] MutRef<$"main.<private name>.Int64">) -> void {
entry(%0: MutRef<$"main.<private name>.Int64">):
   %2 = load %0: MutRef<$"main.<private name>.Int64">
   %3 = gep u64 0, %2: $"main.<private name>.Int64"
   call intrinsic void "lifetime_end" (%3: MutRef<i64>)
   ret void
}

; main.<private name>.ExistentialContainer.deinit()
define @_CNW4mainE20ExistentialContainerD0Ev([mut ref] MutRef<$"main.<private name>.ExistentialContainer">) -> void {
entry(%self: MutRef<$"main.<private name>.ExistentialContainer">):
   call void @_CNW4mainE20ExistentialContainerD3Ev(%self: MutRef<$"main.<private name>.ExistentialContainer">)
   ret void
}

; main.<private name>.ExistentialContainer.__default_init(_ self: main.<private name>.ExistentialContainer.Self (aka main.<private name>.ExistentialContainer))
define @_CNW4mainE20ExistentialContainer14__default_initES0_L0([borrow] $"main.<private name>.ExistentialContainer") -> void {
entry(%0: $"main.<private name>.ExistentialContainer"):
   ret void
}

; main.<private name>.ExistentialContainer.init(value: owned builtin.RawMutablePointer, typeInfo: owned builtin.RawPointer<main.<private name>.TypeInfo>, conformance: owned builtin.RawPointer<main.<private name>.ProtocolConformance>)
define @_CNW4mainE20ExistentialContainerC1EPvKPNS_8TypeInfoEKPNS_19ProtocolConformanceEL5valueL8typeInfoL11conformance([mut ref] MutRef<$"main.<private name>.ExistentialContainer">, [owned] UnsafeMutableRawPtr, [owned] UnsafePtr<$"main.<private name>.TypeInfo">, [owned] UnsafePtr<$"main.<private name>.ProtocolConformance">) -> void {
entry(%self: MutRef<$"main.<private name>.ExistentialContainer">, %1: UnsafeMutableRawPtr, %2: UnsafePtr<$"main.<private name>.TypeInfo">, %3: UnsafePtr<$"main.<private name>.ProtocolConformance">):
   %4 = load %self: MutRef<$"main.<private name>.ExistentialContainer">
   call void @_CNW4mainE20ExistentialContainer14__default_initES0_L0(%4: $"main.<private name>.ExistentialContainer")
   %6 = gep u64 0, %4: $"main.<private name>.ExistentialContainer"
   init %1: UnsafeMutableRawPtr, %6: MutRef<UnsafeMutableRawPtr>
   %8 = gep u64 1, %4: $"main.<private name>.ExistentialContainer"
   init %2: UnsafePtr<$"main.<private name>.TypeInfo">, %8: MutRef<UnsafePtr<$"main.<private name>.TypeInfo">>
   %10 = gep u64 2, %4: $"main.<private name>.ExistentialContainer"
   init %3: UnsafePtr<$"main.<private name>.ProtocolConformance">, %10: MutRef<UnsafePtr<$"main.<private name>.ProtocolConformance">>
   ret void
}

; main.<private name>.ExistentialContainer.init(_ self: mut ref &mut main.<private name>.ExistentialContainer, value: owned builtin.RawMutablePointer, typeInfo: owned builtin.RawPointer<main.<private name>.TypeInfo>, conformance: owned builtin.RawPointer<main.<private name>.ProtocolConformance>)
define @_CNW4mainE20ExistentialContainerC2ERS0_PvKPNS_8TypeInfoEKPNS_19ProtocolConformanceEL0L5valueL8typeInfoL11conformance([mut ref] MutRef<$"main.<private name>.ExistentialContainer">, [owned] UnsafeMutableRawPtr, [owned] UnsafePtr<$"main.<private name>.TypeInfo">, [owned] UnsafePtr<$"main.<private name>.ProtocolConformance">) -> void {
entry(%0: MutRef<$"main.<private name>.ExistentialContainer">, %1: UnsafeMutableRawPtr, %2: UnsafePtr<$"main.<private name>.TypeInfo">, %3: UnsafePtr<$"main.<private name>.ProtocolConformance">):
   %5 = load %0: MutRef<$"main.<private name>.ExistentialContainer">
   %6 = gep u64 0, %5: $"main.<private name>.ExistentialContainer"
   init %1: UnsafeMutableRawPtr, %6: MutRef<UnsafeMutableRawPtr>
   %8 = gep u64 1, %5: $"main.<private name>.ExistentialContainer"
   init %2: UnsafePtr<$"main.<private name>.TypeInfo">, %8: MutRef<UnsafePtr<$"main.<private name>.TypeInfo">>
   %10 = gep u64 2, %5: $"main.<private name>.ExistentialContainer"
   init %3: UnsafePtr<$"main.<private name>.ProtocolConformance">, %10: MutRef<UnsafePtr<$"main.<private name>.ProtocolConformance">>
   ret void
}

define @_CNW4mainE20ExistentialContainerD3Ev([owned] MutRef<$"main.<private name>.ExistentialContainer">) -> void {
entry(%0: MutRef<$"main.<private name>.ExistentialContainer">):
   %2 = load %0: MutRef<$"main.<private name>.ExistentialContainer">
   %3 = gep u64 0, %2: $"main.<private name>.ExistentialContainer"
   %4 = gep u64 1, %2: $"main.<private name>.ExistentialContainer"
   %5 = gep u64 2, %2: $"main.<private name>.ExistentialContainer"
   call intrinsic void "lifetime_end" (%5: MutRef<UnsafePtr<$"main.<private name>.ProtocolConformance">>)
   call intrinsic void "lifetime_end" (%4: MutRef<UnsafePtr<$"main.<private name>.TypeInfo">>)
   call intrinsic void "lifetime_end" (%3: MutRef<UnsafeMutableRawPtr>)
   ret void
}