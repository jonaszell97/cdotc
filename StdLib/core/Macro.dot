
@extern(C)
public def _cdot_AssertionFailure(_ cond: String,
                                  _ msg: String,
                                  _ loc: reflect.SourceLocation,
                                  _ func: String) -> Never {
    print("[21;31massertion failed:[0m '$cond', $msg (in function '$func', file '${loc.fileName}', line: ${loc.line})")
    sys.abort()
}

macro assert(
    ($cond:any, $msg:expr) => {
        static if reflect.debug {
            if !($cond) {
                _cdot_AssertionFailure(stringify!($cond), $msg,
                                       core.reflect.sourceLocation,
                                       core.reflect.function)
            }
        }
    }
)

macro assert_compiles{
    ($code:any, $msg:expr) => {
        static if !__traits(compiles, { $code }) {
            static_assert(false, $msg)
        }
    }
}

macro require(
    ($cond:any, $msg:expr) => {
        if !($cond) {
            _cdot_AssertionFailure(stringify!($cond), $msg, core.reflect.sourceLocation, 
                                   core.reflect.function)
        }
    }
)

@extern(C)
public def _cdot_PreconditionFailure(_ msg: String,
                                     _ loc: reflect.SourceLocation,
                                     _ func: String) -> Never {
    print("precondition violated: $msg (in function '$func', file '${loc.fileName}', line: ${loc.line})")
    sys.abort()
}

macro precondition(
    ($cond:any, $msg:expr) => {
        if !($cond) {
            _cdot_PreconditionFailure($msg, core.reflect.sourceLocation, core.reflect.function)
        }
    },
    ($cond:any) => {
        if !($cond) {
            _cdot_PreconditionFailure(stringify!($cond), core.reflect.sourceLocation, 
                                      core.reflect.function)
        }
    }
)

@extern(C)
public def _cdot_Unreachable(_ msg: String,
                             _ loc: reflect.SourceLocation,
                             _ func: String) -> Never {
    print("[21;31munreachable executed:[0m $msg (in function '$func', file '${loc.fileName}', line: ${loc.line})")
    sys.abort()
}

macro unreachable(
    ($msg:expr) => {
        _cdot_Unreachable($msg, core.reflect.sourceLocation, core.reflect.function)
    },
    () => {
        _cdot_Unreachable("unreachable executed!", core.reflect.sourceLocation,
                          core.reflect.function)
    }
)

@extern(C)
public def _cdot_Unimplemented(_ loc: reflect.SourceLocation,
                               _ func: String) -> Never {
    print("function '$func' is not implemented (in file '${loc.fileName}', line: ${loc.line})")
    sys.abort()
}

macro unimplemented (
    () => {
        _cdot_Unimplemented(core.reflect.sourceLocation,
                            core.reflect.function)
    }
)

macro debug(
    ($msg:expr) => {
        static if reflect.debug {
            print($msg)
        }
    }
)

macro ignore_code {
    ($toks:any) => {}
}

macro compound_assign{
    ($($op:tok)*) => {
        $(
            public def mutating infix ${$op=}(rhs: Self) {
                self = self $op rhs
            }
        )...
    }
}
